
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "generated\examples\plot_affine.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_generated_examples_plot_affine.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_generated_examples_plot_affine.py:


===========
Plot affine
===========

.. GENERATED FROM PYTHON SOURCE LINES 8-9

Setup

.. GENERATED FROM PYTHON SOURCE LINES 9-15

.. code-block:: Python

    import numpy as np
    import vreg

    # Set this to False to show the results
    OFF_SCREEN = True








.. GENERATED FROM PYTHON SOURCE LINES 16-17

Generate reference volume

.. GENERATED FROM PYTHON SOURCE LINES 17-19

.. code-block:: Python

    input_data, input_affine = vreg.generate('triple ellipsoid', markers=False)








.. GENERATED FROM PYTHON SOURCE LINES 20-21

Define affine transformation

.. GENERATED FROM PYTHON SOURCE LINES 21-28

.. code-block:: Python

    stretch = [1.0, 1.5, 1.5]
    translation = np.array([30, -80, -20]) # mm
    rotation_angle = 0.20 * (np.pi/2)
    rotation_axis = [0,0,1]
    rotation = rotation_angle * np.array(rotation_axis)/np.linalg.norm(rotation_axis)
    parameters = np.concatenate((rotation, translation, stretch))








.. GENERATED FROM PYTHON SOURCE LINES 29-30

Define output_geometry

.. GENERATED FROM PYTHON SOURCE LINES 30-33

.. code-block:: Python

    output_shape = input_data.shape
    output_affine = input_affine








.. GENERATED FROM PYTHON SOURCE LINES 34-35

Apply affine

.. GENERATED FROM PYTHON SOURCE LINES 35-40

.. code-block:: Python

    output_data = vreg.affine(
        input_data, input_affine, 
        output_shape, output_affine, 
        parameters)








.. GENERATED FROM PYTHON SOURCE LINES 41-42

Display results

.. GENERATED FROM PYTHON SOURCE LINES 42-47

.. code-block:: Python

    vreg.plot_affine_transformed(
        input_data, input_affine, 
        output_data, output_affine, 
        vreg.affine_matrix(rotation=rotation, translation=translation, pixel_spacing=stretch), 
        off_screen=OFF_SCREEN)



.. image-sg:: /generated/examples/images/sphx_glr_plot_affine_001.png
   :alt: plot affine
   :srcset: /generated/examples/images/sphx_glr_plot_affine_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 9.888 seconds)


.. _sphx_glr_download_generated_examples_plot_affine.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_affine.ipynb <plot_affine.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_affine.py <plot_affine.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_affine.zip <plot_affine.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
