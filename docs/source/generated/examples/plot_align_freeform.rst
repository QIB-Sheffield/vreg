
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "generated\examples\plot_align_freeform.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_generated_examples_plot_align_freeform.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_generated_examples_plot_align_freeform.py:


==============
Align freeform
==============

.. GENERATED FROM PYTHON SOURCE LINES 8-9

Setup

.. GENERATED FROM PYTHON SOURCE LINES 9-15

.. code-block:: Python

    import numpy as np
    import vreg

    # Set this to False to show the results
    OFF_SCREEN = True








.. GENERATED FROM PYTHON SOURCE LINES 16-17

Define geometry of source data

.. GENERATED FROM PYTHON SOURCE LINES 17-23

.. code-block:: Python

    input_shape = np.array([300, 250, 25])   # mm
    pixel_spacing = np.array([1.25, 1.25, 5.0]) # mm
    translation = np.array([0, 0, 0]) # mm
    rotation_angle = 0.2 * (np.pi/2) # radians
    rotation_axis = [1,0,0]








.. GENERATED FROM PYTHON SOURCE LINES 24-25

Generate source data

.. GENERATED FROM PYTHON SOURCE LINES 25-29

.. code-block:: Python

    rotation = rotation_angle * np.array(rotation_axis)/np.linalg.norm(rotation_axis)
    input_affine = vreg.affine_matrix(rotation=rotation, translation=translation, pixel_spacing=pixel_spacing)
    input_data, input_affine = vreg.generate('triple ellipsoid', shape=input_shape, affine=input_affine, markers=False)








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Define affine transformation

.. GENERATED FROM PYTHON SOURCE LINES 31-37

.. code-block:: Python

    stretch = [1.0, 1.5, 1.5]
    translation = np.array([30, -80, -20]) # mm
    rotation_angle = 0.50 * (np.pi/2)
    rotation_axis = [0,0,1]
    rotation = rotation_angle * np.array(rotation_axis)/np.linalg.norm(rotation_axis)








.. GENERATED FROM PYTHON SOURCE LINES 38-39

Define output_volume

.. GENERATED FROM PYTHON SOURCE LINES 39-50

.. code-block:: Python

    output_shape = list(input_data.shape)
    output_affine = input_affine.copy()

    window=False
    if window:
        output_shape[0] = 100
        output_shape[1] = 100
        output_affine[0,3] = output_affine[0,3] + 80
        output_affine[1,3] = output_affine[1,3] + 80
        output_affine[2,3] = output_affine[2,3] + 40








.. GENERATED FROM PYTHON SOURCE LINES 51-52

Apply freeform deformation derived from affine transformation

.. GENERATED FROM PYTHON SOURCE LINES 52-58

.. code-block:: Python

    affine_parameters = np.concatenate((rotation, translation, stretch))
    output_data = vreg.affine_freeform(
        input_data, input_affine, 
        output_shape, output_affine, 
        affine_parameters, nodes=16)
    







.. GENERATED FROM PYTHON SOURCE LINES 59-60

Display results

.. GENERATED FROM PYTHON SOURCE LINES 60-67

.. code-block:: Python

    vreg.plot_affine_transformed(
        input_data, input_affine, 
        output_data, output_affine, 
        vreg.affine_matrix(rotation=rotation, translation=translation, pixel_spacing=stretch), 
        off_screen=OFF_SCREEN)





.. image-sg:: /generated/examples/images/sphx_glr_plot_align_freeform_001.png
   :alt: plot align freeform
   :srcset: /generated/examples/images/sphx_glr_plot_align_freeform_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 68-70

Find the freeform deformation
-----------------------------

.. GENERATED FROM PYTHON SOURCE LINES 70-80

.. code-block:: Python

    nodes = 2
    defo_init = np.zeros(vreg.deformation_field_shape(output_shape, nodes))
    defo_estimate = vreg.align(
        moving=input_data, moving_affine=input_affine, 
        static=output_data, static_affine=output_affine,  
        resolutions=[4,2,1], parameters=defo_init.flatten(),
        transformation=vreg.freeform, metric=vreg.sum_of_squares,
        options={'xtol':1e-2},
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    DOWNSAMPLE BY FACTOR:  4
    DOWNSAMPLE BY FACTOR:  2
    DOWNSAMPLE BY FACTOR:  1




.. GENERATED FROM PYTHON SOURCE LINES 81-84

Check accuracy
--------------
Compare translation against ground truth

.. GENERATED FROM PYTHON SOURCE LINES 84-93

.. code-block:: Python

    defo = vreg.affine_deformation_field(
        input_affine, output_shape, output_affine, affine_parameters, nodes=nodes)
    defo = defo.flatten()
    err = np.linalg.norm(defo_estimate-defo)
    err = 100*err/np.linalg.norm(defo)
    print('Ground truth parameter: ', defo)
    print('Parameter estimate: ', defo_estimate)
    print('Parameter error (%): ', err)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Ground truth parameter:  [  28.28427125   42.74942731   -0.66863347    6.43347003   48.48803779
       -9.4681137   196.40889924  -84.73797356    2.91799808  174.55809802
      -78.99936307   -5.88148214  -59.5836944   -91.75027508   10.25676714
      -81.43449562  -86.0116646     1.45728691  108.54093359 -219.23767595
       13.84339869   86.69013237 -213.49906546    5.04391847]
    Parameter estimate:  [ -9.95832598   1.79698909 -42.46671185 -17.83555703   3.78148628
      15.20993882  -7.60864248   5.24620758 -24.91426612 -14.27242334
       7.13540083  14.45537083  -0.75733679   1.99369592 -33.77104712
      -4.36970259   3.33622827   8.44675175  -1.06526482   3.81381638
     -18.92843386  -5.24269455   5.96622925   8.66507914]
    Parameter error (%):  104.90591319023558




.. GENERATED FROM PYTHON SOURCE LINES 94-97

Display result
--------------
Rotate the original volume

.. GENERATED FROM PYTHON SOURCE LINES 97-102

.. code-block:: Python

    output_data_estimate = vreg.freeform(
        input_data, input_affine, 
        input_data.shape, input_affine, 
        defo_estimate)








.. GENERATED FROM PYTHON SOURCE LINES 103-104

Compare rotated volume and target

.. GENERATED FROM PYTHON SOURCE LINES 104-111

.. code-block:: Python

    pl = vreg.plot_affine_resliced(
        output_data_estimate, input_affine, 
        output_data, output_affine, 
        off_screen=OFF_SCREEN)
    pl.show()


        


.. image-sg:: /generated/examples/images/sphx_glr_plot_align_freeform_002.png
   :alt: plot align freeform
   :srcset: /generated/examples/images/sphx_glr_plot_align_freeform_002.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (2 minutes 44.418 seconds)


.. _sphx_glr_download_generated_examples_plot_align_freeform.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_align_freeform.ipynb <plot_align_freeform.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_align_freeform.py <plot_align_freeform.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_align_freeform.zip <plot_align_freeform.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
